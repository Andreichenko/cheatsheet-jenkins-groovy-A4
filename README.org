* org-mode configuration                                           :noexport:
#+STARTUP: overview customtime noalign logdone hidestars
#+TITLE:  Jenkins-Groovy CheatSheet
#+DESCRIPTION: 
#+KEYWORDS: 
#+AUTHOR: Denny Zhang
#+EMAIL:  denny@dennyzhang.com
#+TAGS: noexport(n)
#+PRIORITIES: A D C
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_EXCLUDE_TAGS: exclude noexport
#+SEQ_TODO: TODO HALF ASSIGN | DONE BYPASS DELEGATE CANCELED DEFERRED
#+LINK_UP:   
#+LINK_HOME: 
* CheatSheet
#+BEGIN_HTML
<a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a>
<a href="https://github.com/DennyZhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a>
<a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="http://slack.dennyzhang.com/badge.svg" alt="slack"/></a>
<a href="https://github.com/DennyZhang"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>

<br/><br/>

<a href="http://makeapullrequest.com" target="_blank" rel="nofollow"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome"/></a>
#+END_HTML

File me [[https://jenkins-groovyhub.com/DennyZhang/cheatsheet-jenkins-groovy-A4/issues][Issues]] or star [[https://jenkins-groovyhub.com/DennyZhang/cheatsheet-jenkins-groovy-A4][this repo]].

See more CheatSheets from Denny: [[https://jenkins-groovyhub.com/topics/denny-cheatsheets][#denny-cheatsheets]]
** Jenkins Pipeline
| Name                                      | Comment                                                                  |
|-------------------------------------------+--------------------------------------------------------------------------|
| Specify parameter to run jobs             | =build job:'job1', parameters:[string(name:'name1', value:va1)]=         |
| Run job in different agents               | =node($agent_label) {...}=                                               |
| Use boolean parameter                     | =if (is_true == "false") {...}=                                          |
| Ask for user input                        | =stage('stage2'){ input "OK to go?" }=                                   |
| Actively fail current pipeline job        | =error("Build failed because of this and that..")=                       |
| Keep going when previous stage has failed | [[keep_going_with_errors.groovy][keep_going_with_errors.groovy]]                                            |
| Send slack notification in pipeline       | [[slack_notification.groovy][slack_notification.groovy]]                                                |
| validate user input: ip address           | =assert ip_address.matches("\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}")= |
| Read Environment Variables                | =def env = System.getenv()=                                              |
  
** Array

| Name             | Comment                                  |
|------------------+------------------------------------------|
| Iterate a list   | =(1..3).each { println "Number ${it}"}=  |
| Iterate a list   | =for(item in [1,2,3,4]){ println item }= |
| Add item to list | =def alist = [10, 9, 8]; alist << 7=     |
| List size        | =def alist = [10, 9, 8]; alist.size()=   |
  
** String

| Name                        | Comment                   |
|-----------------------------+---------------------------|
| Print stdout                | echo 'Action is done'     |
| Print stdout                | println "Hello World"     |
| Split string with delimiter | '1128-2'.tokenize ( '-' ) |

** Integer

| Name             | Comment                                          |
|------------------+--------------------------------------------------|
| Basic caculation | def a = 3, b = 7; println "$a + $b = ${a + b}"    |
  
** Dict/Hashmap/Map

| Name                | Comment                                        |
|---------------------+------------------------------------------------|
| Create a map        | =def m = ['fruit':'Apple', 'veggie':'Carrot']= |
| Add an item to map  | =m.put('denny','hello')=                       |
| Check if key exists | =m.containsKey('key1')=                        |
  
** Files

| Name                            | Comment                                   |
|---------------------------------+-------------------------------------------|
| Read file content as a variable | =def content = readFile("/tmp/test.txt")= |
* More Resources
- groovy-lang.org: http://groovy-lang.org/documentation.html#gettingstarted
- https://jenkins.io/doc/

License: Code is licensed under [[https://www.dennyzhang.com/wp-content/mit_license.txt][MIT License]].
#+BEGIN_HTML
<a href="https://www.dennyzhang.com"><img align="right" width="201" height="268" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/denny_201706.png"></a>

<a href="https://www.dennyzhang.com"><img align="right" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/dns_small.png"></a>
#+END_HTML
